#### Configuration
##################
# Smoothing parameters
median_df = 1
sigma_df = 0
nu_df = 0
# Plot with points yes/no
points_on = TRUE
# resolution of plot
res_plot = 400
# Choose a title and labels for the axes
graph_title = "My example Data"
x_label = "x axis"
y_label = "y axis"
# Choose the limits and step size for the axes
xlim1 = 10
xlim2 = 47
xsteps = 5
ylim1 = 50
ylim2 = 430
ysteps = 50
##################
#### Fitting Model
##################
model <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = training_data)
summary(model)
# define the position of the label for the percentiles
label_perc <- centiles.pred(model, xvalues=max(training_data$x), xname= "x", cent = c(3, 10, 25, 50, 75, 90, 97))
png("./reference_curves.png",
width     = 3.25,
height    = 3.25,
units     = "in",
res       = 1200,
pointsize = 5)
# Plotting curves
centiles(model,
xvar = training_data$x,
ylim = c(ylim1,ylim2),
xlim = c(xlim1,xlim2),
legend = FALSE,col=1,col.cent=1,
cent = c(3, 10, 25, 50, 75, 90, 97),
lwd.cent=c(1,1,1,2,1,1,1),
main=graph_title,
xlab = "",
ylab = "",
labels = FALSE,
axes=TRUE,
points = points_on,
tck = FALSE,
xaxs="i",
yaxs="i")
# Plotting Labels
title(ylab = y_label, line=2.2)
title(xlab = x_label, line=1.6)
axis(1, at = seq(xlim1, xlim2, by=xsteps), labels = seq(xlim1, xlim2, by=xsteps),tck = -0.01, cex.axis=0.8,mgp=c(0,0.2,0))
abline(h= seq(ylim1, ylim2, by=ysteps), v=seq(xlim1, xlim2, by=xsteps), col="gray", lty=3)
axis(2, at = seq(ylim1, ylim2, by=ysteps), labels = seq(ylim1, ylim2, by=ysteps),tck = -0.01, cex.axis=1,las=2,mgp=c(0,0.4,0))
text(max(training_data$x)+ 2, label_perc$C3, "P3")
text(max(training_data$x)+ 2, label_perc$C10, "P10")
text(max(training_data$x)+ 2, label_perc$C25, "P25")
text(max(training_data$x)+ 2, label_perc$C50, "P50")
text(max(training_data$x)+ 2, label_perc$C75, "P75")
text(max(training_data$x)+ 2, label_perc$C90, "P90")
text(max(training_data$x)+ 2, label_perc$C97, "P97")
dev.off()
# author: Christian Winkler, University Hospital Bonn
# date:   19-01-2018
# Load packages
library(gamlss)
# Load some example data from the GAMLSS package
training_data <- abdom
##################
#### Configuration
##################
# Smoothing parameters
median_df = 1
sigma_df = 0
nu_df = 0
# Plot with points yes/no
points_on = TRUE
# resolution of plot
res_plot = 400
# Choose a title and labels for the axes
graph_title = "My example Data"
x_label = "x axis"
y_label = "y axis"
# Choose the limits and step size for the axes
xlim1 = 10
xlim2 = 47
xsteps = 5
ylim1 = 50
ylim2 = 430
ysteps = 50
##################
#### Fitting Model
##################
model <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = training_data)
summary(model)
# define the position of the label for the percentiles
label_perc <- centiles.pred(model, xvalues=max(training_data$x), xname= "x", cent = c(3, 10, 25, 50, 75, 90, 97))
png("./reference_curves.png",
width     = 3.25,
height    = 3.25,
units     = "in",
res       = 1200,
pointsize = 5)
# Plotting curves
centiles(model,
xvar = training_data$x,
ylim = c(ylim1,ylim2),
xlim = c(xlim1,xlim2),
legend = FALSE,col=1,col.cent=1,
cent = c(3, 10, 25, 50, 75, 90, 97),
lwd.cent=c(1,1,1,2,1,1,1),
main=graph_title,
xlab = "",
ylab = "",
labels = FALSE,
axes=TRUE,
points = points_on,
tck = FALSE,
xaxs="i",
yaxs="i")
# Plotting Labels
title(ylab = y_label, line=2.2)
title(xlab = x_label, line=1.6)
axis(1, at = seq(xlim1, xlim2, by=xsteps), labels = seq(xlim1, xlim2, by=xsteps),tck = -0.01, cex.axis=0.8,mgp=c(0,0.2,0))
abline(h= seq(ylim1, ylim2, by=ysteps), v=seq(xlim1, xlim2, by=xsteps), col="gray", lty=3)
axis(2, at = seq(ylim1, ylim2, by=ysteps), labels = seq(ylim1, ylim2, by=ysteps),tck = -0.01, cex.axis=1,las=2,mgp=c(0,0.4,0))
text(max(training_data$x)+ 2, label_perc$C3, "P3")
text(max(training_data$x)+ 2, label_perc$C10, "P10")
text(max(training_data$x)+ 2, label_perc$C25, "P25")
text(max(training_data$x)+ 2, label_perc$C50, "P50")
text(max(training_data$x)+ 2, label_perc$C75, "P75")
text(max(training_data$x)+ 2, label_perc$C90, "P90")
text(max(training_data$x)+ 2, label_perc$C97, "P97")
dev.off()
predictAll(model,newdata = c(0, 1))
predictAll(model,newdata = data.frame(0,1))
predictAll(model,newdata=data.frame(x=42.43))
predict(model,newdata=data.frame(x=42.43))
c
x
training_data
model[0]
model[1]
predict(model)
predict(model)[1]
predict(model,newdata=data.frame(x=62))
predict(model,type = "response")[1]
predict(model,newdata=data.frame(x=62))
predictAll(model,newdata=data.frame(x=62))
predictAll(model,newdata=data.frame(x=c(62,65,68))
)
predictAll(model,newdata=data.frame(x=c(62,65,68)))
predictAll(model,newdata=data.frame(x=c(62,65,68)))$sigma
predictAll(model,newdata=data.frame(x=c(62,65,68)))$sigma[1]
predictAll(model,newdata=data.frame(x=c(62,65,68)))$sigma
predictAll(model,newdata=data.frame(x=c(62,65,68)))[1]$sigma
predictAll(model,newdata=data.frame(x=c(62,65,68)))[1]
a<- predictAll(model,newdata=data.frame(x=c(62,65,68)))[1]
a
a<- predictAll(model,newdata=data.frame(x=c(62,65,68)))
a
a$mu
a$mu[1]
a$mu
model
residuals(model)
model$y
model$mu.x
model$mu.var
model$mu.xlevels
model$mu.x
str(training_data)
model$mu.fv
model$nu.fv
model$sigma.fv
a<- predictAll(model,newdata=data.frame(x=c(12.29)))
a
seq(min(training_data$x), max(training_data$x))
seq(min(training_data$x), max(training_data$x), by = 2)
seq(min(training_data$x), max(training_data$x), by = 1)
seq(min(training_data$x), max(training_data$x), length.out=5)
seq(min(training_data$x), max(training_data$x), length.out=100)
chart <- predictAll(model,newdata=data.frame(x=seq(min(training_data$x), max(training_data$x), length.out=100)))
chart
model$mu.x
a<- predictAll(model,newdata=data.frame(x=c(42.43)))
a
model$sigma.fv
chart
data.frame(chart)
chart <- predictAll(model,newdata=data.frame(x=seq(min(training_data$x), max(training_data$x), length.out=100)))
chart_df <- data.frame(chart)
chart_df
chart_df <- data.frame(chart, x_vector)
x_vector <- seq(min(training_data$x), max(training_data$x), length.out=100)
chart <- predictAll(model,newdata=data.frame(x=x_vector))
chart_df <- data.frame(chart, x_vector)
chart_df
x_values <- seq(min(training_data$x), max(training_data$x), length.out=100)
chart <- predictAll(model,newdata=data.frame(x=x_vector))
chart_df <- data.frame(x_values, chart)
chart_df
chart_df
model.tables()
model$fitted
x_values <- seq(min(training_data$x), max(training_data$x), length.out=100)
chart <- predictAll(model,newdata=data.frame(x=x_vector), type="terms")
chart_df <- data.frame(x_values, chart)
chart_df
chart <- predictAll(model,newdata=data.frame(x=x_vector))
mat <- centiles.pred(model, xname="x",xvalues=x_values, plot = TRUE )
mat
x_values <- seq(min(training_data$x), max(training_data$x), length.out=100)
lms_values <- predictAll(model,newdata=data.frame(x=x_vector))
centile_values <- centiles.pred(model, xname="x",xvalues=x_values, plot = TRUE )
chart <- data.frame(centile_values, lms_values)
chart
chart <- data.frame(lms_values, centile_values)
chart
knitr::opts_chunk$set(echo = TRUE)
library(gamlss)
library(pander)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(knitr)
data = read.csv("C:/Users/CatOnTour/sciebo/Doktorarbeit_Franziska/perzentilen_FINAL_09_04_2018/LA_gesamt_mean_13_02_2018.csv",  header = TRUE, sep = ",", encoding = "latin1")
data_filtered<-na.omit(data)
data_filtered$Geschlecht <- as.factor(data_filtered$Geschlecht)
points_on = TRUE
res = 500
data
data_perc$x
gesch = "male"
y_value = "Vmax"
y_unit = " [ml]"
ylim1 = 0
ylim2 = 100
median_df = 0
sigma_df = 0
nu_df = 0
####
x_axis = "BSA..m.2._mean"
y_axis = "Vmax..ml._mean"
men <- data[(data$Geschlecht=='m'),]
data_perc <- data.frame(men[,x_axis], men[,y_axis])
colnames(data_perc)[1] = "x"
colnames(data_perc)[2] = "y"
m1 <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = data_perc)
label_perc <- centiles.pred(m1, xvalues=max(data_perc$x), xname= "x", cent = c(3, 10, 25, 50, 75, 90, 97))
label_perc
data_perc$x
max(data_perc$x)
round(max(data_perc$x))
round(max(data_perc$x),2)
round(max(data_perc$x),1)
round(min(data_perc$x),1)
data_perc$x
min(data_perc$x)
x_values <- seq(min(data_perc$x), max(data_perc$x)), by = 0.05))
x_values <- seq(min(data_perc$x), max(data_perc$x), by = 0.05)
x_values
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
x_values
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
lms_values <- predictAll(model,newdata=data.frame(x=x_vector))
centile_values <- centiles.pred(model, xname="x",xvalues=x_values, plot = TRUE )
chart <- data.frame(lms_values, centile_values)
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
lms_values <- predictAll(model,newdata=data.frame(x=x_vector))
centile_values <- centiles.pred(model, xname="x",xvalues=x_values)
chart <- data.frame(lms_values, centile_values)
chart
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
lms_values <- predictAll(m1,newdata=data.frame(x=x_vector))
centile_values <- centiles.pred(m1, xname="x",xvalues=x_values)
chart <- data.frame(lms_values, centile_values)
chart
library(gamlss)
library(pander)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(knitr)
data = read.csv("C:/Users/CatOnTour/sciebo/Doktorarbeit_Franziska/perzentilen_FINAL_09_04_2018/LA_gesamt_mean_13_02_2018.csv",  header = TRUE, sep = ",", encoding = "latin1")
data_filtered<-na.omit(data)
data_filtered$Geschlecht <- as.factor(data_filtered$Geschlecht)
points_on = TRUE
res = 500
gesch = "male"
y_value = "Vmax"
y_unit = " [ml]"
ylim1 = 0
ylim2 = 100
median_df = 0
sigma_df = 0
nu_df = 0
####
x_axis = "BSA..m.2._mean"
y_axis = "Vmax..ml._mean"
men <- data[(data$Geschlecht=='m'),]
data_perc <- data.frame(men[,x_axis], men[,y_axis])
colnames(data_perc)[1] = "x"
colnames(data_perc)[2] = "y"
m1 <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = data_perc)
label_perc <- centiles.pred(m1, xvalues=max(data_perc$x), xname= "x", cent = c(3, 10, 25, 50, 75, 90, 97))
centiles(m1,
xvar = data_perc$x,
ylim = c(ylim1,ylim2),
xlim = c(0, 2.4),
legend = FALSE,col=1,col.cent=1,
cent = c(3, 10, 25, 50, 75, 90, 97),
lwd.cent=c(1,1,1,2,1,1,1),
main="",
xlab = "",
ylab = "",
labels = FALSE,
axes=TRUE,
points = points_on,
tck = FALSE,
xaxs="i",
yaxs="i",
cex.main=14)
title(main=paste(y_value, paste("(",gesch,")", sep =""), sep =" "), cex.main = 2.5)
title(ylab = paste(y_value, y_unit, sep =""), line=2.35, cex.lab=2.5)
title(xlab ="BSA [m²]", line=2.8, cex.lab=2.5)
axis(1, at = seq(0, 2.5, by=0.25), labels = seq(0, 2.5, by=0.25), tck = -0.01, cex.axis=1.5, mgp=c(0,0.8,0))
abline(h = seq(0, 230, by=10), v = seq(0, 2.5, by=0.25), col="gray", lty=3)
axis(2, at = seq(0, 230, by=10), labels = seq(0, 230, by=10),tck = -0.01, cex.axis=1.5, las=2, mgp=c(0,0.5,0))
text(max(data_perc$x)+ 0.1, label_perc$C3, "P3", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C10, "P10", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C25, "P25", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C50, "P50", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C75, "P75", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C90, "P90", cex = 1.8)
text(max(data_perc$x)+ 0.1, label_perc$C97, "P97", cex = 1.8)
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
lms_values <- predictAll(m1,newdata=data.frame(x=x_vector))
centile_values <- centiles.pred(m1, xname="x",xvalues=x_values)
chart <- data.frame(lms_values, centile_values)
x_values <- seq(round(min(data_perc$x),1), round(max(data_perc$x),1), by = 0.05)
lms_values <- predictAll(m1,newdata=data.frame(x=x_values))
centile_values <- centiles.pred(m1, xname="x",xvalues=x_values)
chart <- data.frame(lms_values, centile_values)
chart
install.packages("kableExtra")
seq(0,1,100)
seq(0,1,100)
seq(0,1,length.out=100)
seq(0,1,length.out=101)
sigma.fix = TRUE,
nu.fix = TRUE,
sigma.start = 0.1,
nu.start = 0.1,
"gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)"
eval(parse(text = "gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)"))
parse("gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)")
parse(text="gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)")
library(gamlss)
eval(parse(text = "gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)"))
data_perc = abdom
eval(parse(text = "gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)"))
median_df = 1
sigma_df = 1
nu_df = 1
eval(parse(text = "gamlss(y ~ pb(x, df = median_df),sigma.formula = ~ pb(x, df = sigma_df),nu.formula = ~pb(x, df = nu_df),family = \"BCCG\",method = RS(),data = data_perc)"))
result = tryCatch({my}, error = function(e) {print('21212')}
}
result = tryCatch({my}, error = function(e) {print('21212')})
m1$sbc
m1 <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = data_perc,
control=gamlss.control(trace=FALSE))
m1
library(gamlss)
data_perc <- abdom
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc,
control=gamlss.control(trace=FALSE))
print(m1$sbc)
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc[0:10,],
control=gamlss.control(trace=FALSE))
print(m1$sbc)
m1 <- 0
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc[0:10,],
control=gamlss.control(trace=FALSE))
m1 <- 0
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc[0:10,],
control=gamlss.control(trace=FALSE))
print(m1$sbc)
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc[0:10,],
control=gamlss.control(trace=FALSE))
data_perc <- abdom
m1 <- gamlss(y ~ pb(x, df = 1),
sigma.formula = ~ pb(x, df = 0),
nu.formula = ~pb(x, df = 0),
family = "BCCG",
method = RS(),
data = data_perc[0:10,],
control=gamlss.control(trace=FALSE))
print(m1$sbc)
if(m1$sbc){print("yes")}else{print("no")}
if(exists(m1$sbc)){print("yes")}else{print("no")}
if(exists(m1$sbc, envir = myEnvir)){print("yes")}else{print("no")}
if(exists(m1)){print("yes")}else{print("no")}
result = tryCatch({
res <- m1$sbc
}, error = function(e) {
res <- "-"
})
result = tryCatch({
res <- m1$sbc
}, error = function(e) {
res <- "-"
})
print(result)
result = tryCatch({
m1 <- gamlss(y ~ pb(x, df = median_df),
sigma.formula = ~ pb(x, df = sigma_df),
nu.formula = ~pb(x, df = nu_df),
family = "BCCG",
method = RS(),
data = data_perc,
control=gamlss.control(trace=FALSE))
#summary(m1)
res <- m1$sbc
}, error = function(e) {
res <- "-"
})
print(result)
string(-)
String(as)
as.character(s)
as.character("as")
"ADDSASADS"
A<-"ADDSASADS"
A
A[:3]
A[1:3]
A[[1:3]
]
A[,3]
A[1,3]
A[,3]
substr("abcdef", 2, 4)
substr("abcdef", 0, 4)
substr("abcdef", stop=4)
substr("abcdef", 0,stop=4)
substr("abcdef", 0,stop=-1)
substr("abcdef", 0,stop=-2)
dirname("C:/some_dir/a.ext")
myArgs[4] <- s
myArgs[4] <- "s"
paste("asdasd","./tmp/percentiles.png")
paste(myArgs[4],"/tmp/percentiles.png", "")
paste(myArgs[4],"/tmp/percentiles.png")
paste("asdas","/tmp/percentiles.png", "")
paste("asdas","/tmp/percentiles.png")
paste("asdas","/tmp/percentiles.png",sep = "")
